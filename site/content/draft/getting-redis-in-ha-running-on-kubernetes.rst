==========================================
Getting Redis in H/A running on Kubernetes
==========================================

One of the more frustrating challenges I have recently faced is trying to get Redis running in H/A on Kubernetes. 
Recently, Kubernetes 1.3 introduced support for a 'pet set', so I'm going to give it another go.

Terms
-----

Redis: An open source (BSD licensed), in-memory data structure store, used as database, cache and message broker. (https://github.com/antirez/redis) 
Kubernetes: Production-Grade Container Scheduling and Management (https://github.com/kubernetes/kubernetes)
GKE: Google Container Engine/Google Kubernetes Engine

Limtations
----------

- No resource requirements. I legit have no idea how much they'd use!

Todo
----

- They should be scraped with Prometheus.

Digging In
----------

I'm going to abuse an existing cluster I have set up for hosting general stuff on GKE. Notably, however, it doesn't
have any provision for the NetworkPolicy series; I intend to get a host up with CoreOS, Flocker & Calico, but I 
haven't gotten around to it.

First, let's declare a namespace

.. Code:: yaml

  ---
  # Generated by Boilr at 
  apiVersion: "v1"
  kind: "Namespace"
  metadata:
    name: "redis-experiment-littleman-co"

Yes, that's right - I'm too lazy to hand-write these files, so I'm using boilr to generate them. You can see the 
templates at https://github.com/littlemanco/

.. Code:: bash

  $ kubectl apply -f .
    namespace "redis-experiment-littleman-co" created

Success. That gives me somewhere to put the resources.

It also looks like this is about as far as I'm going to get tonight. Pet set is an Alpha Kubernetes feature, and 
thus not supported on GKE. Drat.
